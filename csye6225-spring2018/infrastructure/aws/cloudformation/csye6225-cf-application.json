{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Sample CloudFormation Template for CSYE 6225 - Spring 2018",

    "Parameters" : {
        "stackName":{
            "Type":"String"
        },
        "VPCID":{
            "Type":"String"
        },
        "webSubnetID" : {
            "Type" : "String"
        },
        "dbSubnetID" : {
            "Type" : "String"
        },
        "SecurityGroupID" : {
            "Type" : "String"
       }

    },

    "Resources": {
        "csye6225ec2": {
            "Type": "AWS::IAM::Role",
            "Properties": {
               "AssumeRolePolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [ {
                     "Effect": "Allow",
                     "Principal": {
                        "Service": [ "ec2.amazonaws.com" ]
                     },
                     "Action": [ "sts:AssumeRole" ]
                  } ]
                },
               "Path": "/",
               "Policies": [
                {
                  "PolicyName": "s3deployrdsfull",
                  "PolicyDocument": {
                     "Version" : "2012-10-17",
                     "Statement": [ {
                        "Effect": "Allow",
                        "Action": [
                           "s3:*",
                           "codedeploy:*",
                           "rds:*",
                           "cloudwatch:DescribeAlarms",
                           "cloudwatch:GetMetricStatistics",
                           "ec2:DescribeAccountAttributes",
                           "ec2:DescribeAvailabilityZones",
                           "ec2:DescribeInternetGateways",
                           "ec2:DescribeSecurityGroups",
                           "ec2:DescribeSubnets",
                           "ec2:DescribeVpcAttribute",
                           "ec2:DescribeVpcs",
                           "sns:ListSubscriptions",
                           "sns:ListTopics",
                           "sns:Publish",
                           "logs:DescribeLogStreams",
                           "logs:GetLogEvents",
                           "logs:CreateLogGroup",
                           "logs:CreateLogStream",
                           "logs:PutLogEvents",
                           "logs:DescribeLogStreams"
                        ],
                        "Resource": "*"
                      } ]
                  }
                }
                ]
            }
        },
        "RootInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
               "Path": "/",
               "Roles": [ {
                  "Ref": "csye6225ec2"
               } ]
            }
        },
        "csye6225rds": {
            "Type": "AWS::RDS::DBSecurityGroup",
            "Properties": {
                "GroupDescription" : "security group for rds",
                "DBSecurityGroupIngress": {
                    "EC2SecurityGroupId": { "Ref": "SecurityGroupID" }
                },
                "EC2VpcId" : { "Ref" : "VPCID" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "csye6225-rds"
                    }
                ]
            }
        },
        "DynamoDBTable": {
            "Type" : "AWS::DynamoDB::Table",
            "Properties" : {
                "TableName" : "Users",
                "AttributeDefinitions" : [
                    {
                        "AttributeName" : "id",
                        "AttributeType" : "S"
                    }
                ],
                "KeySchema" : [
                    {
                        "AttributeName" : "id",
                        "KeyType" : "HASH"
                    }
                ],
                "ProvisionedThroughput" : {
                    "ReadCapacityUnits" : "5",
                    "WriteCapacityUnits" : "5"
                }
            }
        },
        "RecordServiceS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName" : { "Fn::Join" : ["", [ "web-app.","csye6225-spring2018-liruix.me"]]}
            }
        },
 	    "DBSubnetGroup":{
            "Type":"AWS::RDS::DBSubnetGroup",
            "Properties":{
               "DBSubnetGroupDescription":"description",
               "SubnetIds":[
                  {
                     "Ref":"webSubnetID"
                  },
                  {
                     "Ref":"dbSubnetID"
                  }
               ]
            }
         },
    "ApplicationLoadBalancer" : {
           "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
           "Properties" : {
             "Scheme":"internet-facing",
             "Name":"ApplicationLoadBalancer",
             "Subnets" : [{ "Ref" : "webSubnetID"},{"Fn::ImportValue":"csye6225-cloud-networking-webSubnet1"}],
             "SecurityGroups": [{"Fn::ImportValue": "csye6225-cloud-networking-loadbalancer-SecurityGroup"}],
             "Type" : "application"
           }
         },
    "ALBListener" : {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
        "DefaultActions" : [{
          "Type" : "forward",
          "TargetGroupArn" : { "Ref" : "ALBTargetGroup" }
        }],
        "LoadBalancerArn" : { "Ref" : "ApplicationLoadBalancer" },
        "Port" : "80",
        "Protocol" : "HTTP"
      }
    },
    "ALBListener1" : {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
        "Certificates" : [
          {"CertificateArn" : "arn:aws:acm:us-east-1:581354222471:certificate/89220500-dc3e-4289-8557-b6d3310a2e6c"} ],
        "DefaultActions" : [{
          "Type" : "forward",
          "TargetGroupArn" : { "Ref" : "ALBTargetGroup" }
        }],
        "LoadBalancerArn" : { "Ref" : "ApplicationLoadBalancer" },
        "Port" : "443",
        "Protocol" : "HTTPS"
      }
    },

    "ALBTargetGroup" : {
        "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties" : {
        "HealthCheckIntervalSeconds" : 30,
        "HealthCheckTimeoutSeconds" : 5,
        "Name":"MyTargetGroup",
        "HealthyThresholdCount" : 3,
        "Port" : 8080,
        "Protocol" : "HTTP",
        "UnhealthyThresholdCount" : 5,
        "VpcId" : {"Ref" : "VPCID"}
      }
    },
  "MyDNSGroup": {
    "Type" : "AWS::Route53::RecordSetGroup",
    "Properties" : {
      "HostedZoneId" : "ZEJ8FVC339E4L",
      "RecordSets" : [
            {
              "Name" : "csye6225-spring2018-liruix.me.",
              "Type" : "A",
              "AliasTarget" : {
                  "HostedZoneId" : { "Fn::GetAtt" : ["ApplicationLoadBalancer", "CanonicalHostedZoneID"] },
                  "DNSName" : { "Fn::GetAtt" : ["ApplicationLoadBalancer","DNSName"] }
              }
            }
          ]
    }
  },

        "lambdasnsexecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version" : "2012-10-17",
                    "Statement": [ {
                        "Effect": "Allow",
                         "Principal": {
                            "Service": [ "lambda.amazonaws.com" ]
                        },
                     "Action": [ "sts:AssumeRole" ]
                     } ]
                 },
                 "RoleName":"lambdasnsexecution",
                 "Path": "/",
                 "Policies": [ {
                    "PolicyName": "lambda-sns-execution",
                    "PolicyDocument": {
                        "Version" : "2012-10-17",
                        "Statement": [ {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "DynamoDB:*",
                                "ses:*"
                            ],
                            "Resource": "*"
                        } ]
                    }
                } ]
            }
        },
        "RDSIntance" : {
            "Type" : "AWS::RDS::DBInstance",
            "Properties" : {
               "DBName" : "csye6225",
               "AllocatedStorage" : "20",
               "DBInstanceClass" : "db.t2.medium",
               "MultiAZ" : "false",
               "Engine" : "MySQL",
               "EngineVersion" : "5.6.37",
               "StorageType" : "gp2",
               "MasterUsername" : "csye6225master",
               "MasterUserPassword" :"csye6225password",
               "DBInstanceIdentifier" : "csye6225-spring2018",
               "DBSecurityGroups" : [ {"Ref" : "csye6225rds"}],
               "PubliclyAccessible" : "false",
               "DBSubnetGroupName" : { "Ref" : "DBSubnetGroup" }
            }
        },


        "Lambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "LogEvent::handleRequest",
                "Role": { "Fn::GetAtt" : ["lambdasnsexecution", "Arn"] },
                "Code": {
                    "S3Bucket": "ruixinli",
                    "S3Key": "csye6225awslambda001.zip"
                },
                "Runtime": "java8",
                "Timeout": "25",
                "MemorySize":"512"
            }
        },

        "Topic": {
            "Type" : "AWS::SNS::Topic",
            "Properties" : {
                "DisplayName" : "resetYourPassword",
                "Subscription" : [ {
                    "Endpoint" : { "Fn::GetAtt" : [ "Lambda", "Arn" ] },
                    "Protocol" : "Lambda"
                }],
              "TopicName" : "resetPassword"
        	}
        },


        "AutoScalinggroup":{
                "Type" : "AWS::AutoScaling::AutoScalingGroup",
                "Properties" : {
                  "VPCZoneIdentifier" : [
                    { "Ref" : "webSubnetID" }
                  ],
                  "AvailabilityZones" : [ "us-east-1a" ],
                  "Cooldown" : "60",
                  "DesiredCapacity" : "3",
                  "LaunchConfigurationName" : {"Ref":"asglaunchconfig"},
                  "MaxSize" : "7",
                  "MinSize" : "3",
                  "TargetGroupARNs":[{"Ref": "ALBTargetGroup"}],
                  "Tags" : [ {
                    "Key" : "asgtag1",
                    "Value" : "asgtag1",
                    "PropagateAtLaunch" : "true"
                    }, {
                      "Key" : "asgtag2",
                      "Value" : "asgtag2",
                      "PropagateAtLaunch" : "true"
                      } ]
                         }
                      },
            "asglaunchconfig": {
                "Type": "AWS::AutoScaling::LaunchConfiguration",
                "Properties": {
                  "AssociatePublicIpAddress": "true",
                  "ImageId": "ami-66506c1c",
                  "InstanceType": "t2.micro",
                  "KeyName": "assign06",
                  "IamInstanceProfile":{"Ref":"RootInstanceProfile"},
                  "SecurityGroups": [{"Ref":"SecurityGroupID"}],
                  "UserData": {
                    "Fn::Base64": {
                      "Fn::Join": [
                        "\n",
                        [
                          "#!/bin/bash -xe ",
                          "sudo apt-get update",
                          "sudo apt-get install openjdk-8-jdk -y",
                          "sudo apt-get install ruby -y ",
                          "sudo apt-get install wget -y ",
                          "sudo apt-get install python -y ",
                          "sudo apt-get update",
                          "sudo wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install ",
                          "sudo chmod +x ./install ",
                          "sudo ./install auto ",
                          "sudo service codedeploy-agent start ",
                          "sudo apt-get install tomcat8 -y ",
                          "sudo echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dspring.datasource.username=csye6225master -Dspring.datasource.password=csye6225password  -Dspring.profiles.active=aws\\\"\" >> /etc/default/tomcat8 \n",
                        {
                            "Fn::Join": [
                                "",
                                [
                                    "echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dspring.datasource.url=jdbc:mysql://",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSIntance",
                                            "Endpoint.Address"
                                        ]
                                    },
                                    ":3306/csye6225\\\"\" >> /etc/default/tomcat8 \n"
                                ]
                            ]
                        },
                          "sudo service tomcat8 restart ",
                          "sudo apt-get update",
                          "sudo touch /tmp/awslogs.conf",
                          "sudo echo '[general]' > /tmp/awslogs.conf",
                          "sudo echo 'state_file= /var/awslogs/agent-state' >> /tmp/awslogs.conf",
                          "sudo echo '[logstream1]' >> /tmp/awslogs.conf",
                          "sudo echo 'file = /var/log/tomcat8/csye6225-aws.log' >> /tmp/awslogs.conf",
                          "sudo echo 'log_group_name = csye6225-webapp' >> /tmp/awslogs.conf",
                          "sudo echo 'log_stream_name = csye6225-webapp' >> /tmp/awslogs.conf",
                          "sudo echo 'datetime_format = %d/%b/%Y:%H:%M:%S' >> /tmp/awslogs.conf",
                          "curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O",
                          {
                            "Fn::Join": [
                              " ",
                              [
                                "sudo python ./awslogs-agent-setup.py -n -r",
                                {
                                  "Ref": "AWS::Region"
                                },
                                "-c /tmp/awslogs.conf || error_exit 'Failed to run CloudWatch Logs agent setup'"
                              ]
                            ]
                          },
                          "cd /etc/systemd/system",
                          "sudo touch awslogs.service",
                          "sudo echo '[Unit]' >> awslogs.service",
                          "sudo echo 'Description=Service for CloudWatch Logs agent' >> awslogs.service",
                          "sudo echo 'After=rc-local.service' >> awslogs.service",
                          "sudo echo '[Service]' >> awslogs.service",
                          "sudo echo 'Type=simple' >> awslogs.service",
                          "sudo echo 'Restart=always' >> awslogs.service",
                          "sudo echo 'KillMode=process' >> awslogs.service",
                          "sudo echo 'TimeoutSec=infinity' >> awslogs.service",
                          "sudo echo 'PIDFile=/var/awslogs/state/awslogs.pid' >> awslogs.service",
                          "sudo echo 'ExecStart=/var/awslogs/bin/awslogs-agent-launcher.sh --start --background --pidfile $PIDFILE --user awslogs --chuid awslogs &amp;' >> awslogs.service",
                          "sudo echo '[Install]' >> awslogs.service",
                          "sudo echo 'WantedBy=multi-user.target' >> awslogs.service",
                          "sudo systemctl start awslogs.service",
                          "sudo systemctl enable awslogs.service"
                        ]
                      ]
                    }
                  }
                }
          },
          "InstanceSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
              "GroupDescription" : "Enable SSH access and HTTP from the load balancer only",
              "SecurityGroupIngress" : [ {
                "IpProtocol" : "tcp",
                "FromPort" : "22",
                "ToPort" : "22",
                "CidrIp" :  "0.0.0.0/0"
                },
                {
                  "IpProtocol" : "tcp",
                  "FromPort" : "8080",
                  "ToPort" : "8080",
                  "SourceSecurityGroupId" : {"Fn::Select" : [0, {"Fn::GetAtt" : ["ApplicationLoadBalancer", "SecurityGroups"]}]}
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"
                }],
                  "VpcId" : { "Ref" : "VPCID" }
                }
              },
              "WebServerScaleUpPolicy": {
                "Type": "AWS::AutoScaling::ScalingPolicy",
                "Properties": {
                  "AdjustmentType": "ChangeInCapacity",
                  "AutoScalingGroupName": {
                    "Ref": "AutoScalinggroup"
                  },
                  "Cooldown": "60",
                  "ScalingAdjustment": "1"
                }
                },
                "WebServerScaleDownPolicy": {
                  "Type": "AWS::AutoScaling::ScalingPolicy",
                  "Properties": {
                    "AdjustmentType": "ChangeInCapacity",
                    "AutoScalingGroupName": {
                      "Ref": "AutoScalinggroup"
              },
                "Cooldown": "60",
                "ScalingAdjustment": "-1"
              }
              },
              "CPUAlarmHigh": {
                "Type": "AWS::CloudWatch::Alarm",
                "Properties": {
                  "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
                  "MetricName": "CPUUtilization",
                  "Namespace": "AWS/EC2",
                  "Statistic": "Average",
                  "Period": "300",
                  "EvaluationPeriods": "2",
                  "Threshold": "10",
                  "AlarmActions": [
              {
                "Ref": "WebServerScaleUpPolicy"
              }
              ],
                "Dimensions": [
              {
                "Name": "AutoScalingGroupName",
                "Value": {
                  "Ref": "AutoScalinggroup"
                }
              }
              ],
                "ComparisonOperator": "GreaterThanThreshold"
              }
              },
              "CPUAlarmLow": {
                  "Type": "AWS::CloudWatch::Alarm",
                  "Properties": {
                    "AlarmDescription": "Scale-down if CPU < 70% for 10 minutes",
                    "MetricName": "CPUUtilization",
                    "Namespace": "AWS/EC2",
                    "Statistic": "Average",
                    "Period": "300",
                    "EvaluationPeriods": "2",
                    "Threshold": "70",
                    "AlarmActions": [
              {
                  "Ref": "WebServerScaleDownPolicy"
              }
              ],
                "Dimensions": [
              {
                  "Name": "AutoScalingGroupName",
                  "Value": {
                    "Ref": "AutoScalinggroup"
                  }
              }
              ],
              "ComparisonOperator": "LessThanThreshold"
              }
              }
            }
          }
